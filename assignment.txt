Question: Perform 1 cycle of DES where 
M = 00000001 00100011 01000101 01100111 10001001 10101011 11001101 11101111
k = 00010011 00110100 01010111 01111001 10011011 10111100 11011111 11110001


Answer:
Generating subkeys from a 64 bit key
k = 00010011 00110100 01010111 01111001 10011011 10111100 11011111 11110001

Now we convert this 64 bit key to 56 bit by using parity drop table
K = 1111000 0110011 0010101 0101111 0101010 1011001 1001111 0001111

now we will divide this 56 bit into two 28 bit strings
C=1111000 0110011 0010101 0101111
D=0101010 1011001 1001111 0001111

we need to make c1,d1 - c16,d16 using left shifts 
since we only need k1 (subkey 1) I will only perform shifts for c1,d1
according to shift table for cycle 1 we do only 1 left shift
so,

c1=1110000110011001010101011111
d1=1010101011001100111100011110

now we combine both of them using concat
k1=11100001100110010101010111111010101011001100111100011110

now this is a 56 bit key and we need 48 bit subkey so we use Key compression table also known as PC-2 table
K1 = 000110110000 001011101111 111111000111 000001110010

Now we have the subkey k1 we can now perform 1 cycle of message encryption
M = 00000001 00100011 01000101 01100111 10001001 10101011 11001101 11101111

We perform initial permutation on the 64 bit message also known as Shuffle using the IP table
IP = 11001100 00000000 11001100 11111111 11110000 10101010 11110000 10101010

now divide this 64 bit IP string to two 32 bit strings
L0=11001100 00000000 11001100 11111111
R0=11110000 10101010 11110000 10101010

In standard DES we have 16 cycles so we get L1,R1 till L16,R16 but we are only going to perform 1 cycle so we only need L1 and R1
L1 = R0
R1 = L0 XOR f(R0, k1)

f(R0,k1) = R0 is a 32 bit string while k1 (subkey 1) is a 48 bit string we can't take XOR so we need to convert 32 bit R0 into 48 bit string
Using Expansion table we get
R0=11110000 10101010 11110000 10101010
E(R0)=011110100001 010101010101 011110100001 010101010101

now we can take XOR on E(R0) and K1
K1 =        000110110000 001011101111 111111000111 000001110010
E(R0)=      011110100001 010101010101 011110100001 010101010101
K1+E(R0) =  011000010001 011110111010 100001100110 010100100111

Now we need to divide this resultant 48 bit into 8 groups of 6 bits
011000 010001 011110 111010 100001 100110 010100 100111

we have 8 groups of 6 bits, now we need to seperate the outer and inner bits like this
    (OB) (Inner Bits)
B1= 00 1100
B2= 01 1000
B3= 00 1111
B4= 10 1101
B5= 11 0000
B6= 10 0011
B7= 00 1010
B8= 11 0011

Now we use S-Box, for each of these 8 groups we have seperate S-Box namely S1 to S8
So,

S1(B1)= 00 1100 => 0101
S2(B2)= 01 1000 => 1100 
S3(B3)= 00 1111 => 1000
S4(B4)= 10 1101 => 0010
S5(B5)= 11 0000 => 1011
S6(B6)= 10 0011 => 0101
S7(B7)= 00 1010 => 1001
S8(B8)= 11 0011 => 0111

Now we combine these 8 groups of 4 bits into a single 32 bit string using concat
f(R0,K1) = 00100011 01001010 10101001 10111011

Now,
R1 = L0 XOR f(R0, k1)

L0 =        11110000 10101010 11110000 10101010
f(R0, k1) = 00100011 01001010 10101001 10111011
R1=         11101111 01001010 01100101 01000100

Now inorder to get the Encrypted message all we need to do is combine both L1 and R1
Enc1 = L1 concat R1
Enc1 = 11110000 10101010 11110000 10101010 11101111 01001010 01100101 01000100

Note: This is only 1 cycle of DES